# Server Configuration
server.port=${SERVER_PORT:0}
server.servlet.context-path=/

# Spring Application Configuration
spring.main.allow-bean-definition-overriding=true
spring.main.web-application-type=REACTIVE

# Spring Security Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://auth.chevere.ddns.net/realms/kysoft-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://auth.chevere.ddns.net/realms/kysoft-realm/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.token-uri=https://auth.chevere.ddns.net/realms/kysoft-realm/protocol/openid-connect/token

# DataSource Configuration
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/patients
spring.datasource.username=postgres
spring.datasource.password=toor

# JPA Configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# JWT Configuration
jwt.auth.converter.resource-id=registro-civil
jwt.auth.converter.principle-attribute=preferred_username

# HTTP and CORS Configuration
spring.mvc.cors.enabled=true
spring.mvc.cors.allowed-origins=http://localhost:8080
spring.mvc.cors.allowed-methods=*
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.exposed-headers=*
spring.mvc.cors.allow-credentials=true
spring.mvc.cors.max-age=3600

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# SpringDoc Configuration
springdoc.swagger-ui.path=/swagger-ui.html

# Management Endpoints Configuration
management.endpoints.web.exposure.include=openapi,swagger-ui
